name: Build and Release

on:
  push:
    branches: [main, master]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main, master]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd64]
        include:
          - os: ubuntu-latest
            artifact_name: aml-reports
          - os: windows-latest
            artifact_name: aml-reports.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache-key: ${{ runner.os }}-${{ runner.arch }}-cargo-
          cache: true
          cache-all-crates: true

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-build-target-
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cargo-build-target-

      - name: Build release
        run: cargo build --release --verbose

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.artifact_name }}
          path: target/release/${{ matrix.artifact_name }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
